<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ken.wms.dao.StockOutMapper">
	
	<resultMap type="com.ken.wms.domain.StockOutDO" id="stockOutDO">
		<id property="id" column="STOCKOUT_ID"/>
		<result property="customerID" column="STOCKOUT_CUSTOMER_ID"/>
		<result property="customerName" column="STOCKOUT_CUSTOMER_NAME"/>
		<result property="goodID" column="STOCKOUT_GOOD_ID"/>
		<result property="goodName" column="STOCKOUT_GOOD_NAME"/>
		<result property="number" column="STOCKOUT_NUMBER"/>
		<result property="time" column="STOCKOUT_TIME"/>
		<result property="personInCharge" column="STOCKOUT_PERSON"/>
		<result property="price" column="STOCKOUT_PRICE"/>
	</resultMap>
	
	<select id="selectAll" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_PRICE as STOCKOUT_PRICE
		from
			wms_record_out r,wms_goods g,wms_customer c
		where
			r.RECORD_CUSTOMERID = c.CUSTOMER_ID and
			r.RECORD_GOODID = g.GOOD_ID
	</select>
	
	<select id="selectByCustomerId" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_REPOSITORYID asSTOCKOUT_REPOSITORY_ID
		from
			wms_record_out r,wms_goods g,wms_customer c
		where
			r.RECORD_CUSTOMERID = c.CUSTOMER_ID and
			r.RECORD_GOODID = g.GOOD_ID and
			r.RECORD_CUSTOMERID = #{customerId}
	</select>

	<select id="selectByCustomerName" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			s.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_PRICE as STOCKIN_PRICE
		from
			wms_record_out r,wms_goods g,wms_customer s
		where
			r.RECORD_CUSTOMERID = s.CUSTOMER_ID and
			r.RECORD_GOODID = g.GOOD_ID and
			s.CUSTOMER_NAME like concat(concat('%',#{customerName}),'%')
	</select>
	
	<select id="selectByGoodId" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_REPOSITORYID asSTOCKOUT_REPOSITORY_ID
		from
			wms_record_out r,wms_goods g,wms_customer c
		where
			r.RECORD_CUSTOMERID = c.CUSTOMER_ID and
			r.RECORD_GOODID = g.GOOD_ID and
			r.RECORD_GOODID = #{goodId}
	</select>
	
	<select id="selectById" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_REPOSITORYID asSTOCKOUT_REPOSITORY_ID
		from
			wms_record_out r,wms_goods g,wms_customer c
		where
			r.RECORD_CUSTOMERID = c.CUSTOMER_ID and
			r.RECORD_GOODID = g.GOOD_ID and
			r.RECORD_ID = #{id}
	</select>



	<select id="selectByCustomerIDAndDate" resultMap="stockOutDO">
        select
            r.RECORD_ID as STOCKOUT_ID,
            r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
            c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
            r.RECORD_GOODID as STOCKOUT_GOOD_ID,
            g.GOOD_NAME as STOCKOUT_GOOD_NAME,
            r.RECORD_NUMBER as STOCKOUT_NUMBER,
            r.RECORD_TIME as STOCKOUT_TIME,
            r.RECORD_PERSON as STOCKOUT_PERSON,
            r.RECORD_PRICE as STOCKOUT_PRICE
        from
            wms_record_out r,wms_goods g,wms_customer c
        where
            r.RECORD_CUSTOMERID = c.CUSTOMER_ID and
            r.RECORD_GOODID = g.GOOD_ID
            <if test="customerID > 0">
                and r.RECORD_CUSTOMERID = #{customerID}
            </if>
            <if test="startDate != null">
                and r.RECORD_TIME >= #{startDate}
            </if>
            <if test="endDate != null">
                <![CDATA[and r.RECORD_TIME <= #{endDate}]]>
            </if>
	</select>
		
	<insert id="insert">
		insert into wms_record_out(RECORD_CUSTOMERID,RECORD_GOODID,RECORD_NUMBER,RECORD_TIME,RECORD_PERSON,RECORD_PRICE)
		values(#{customerID},#{goodID},#{number},#{time},#{personInCharge},#{price})
	</insert>
	
	<update id="update">
		update
			wms_record_out
		set
			RECORD_CUSTOMERID = #{customerID},
			RECORD_GOODID = #{goodID},
			RECORD_NUMBER = #{number},
			RECORD_TIME = #{time},
			RECORD_PERSON = #{personInCharge}
		where
			RECORD_ID = #{id}
	</update>
	
	<delete id="deleteById">
		delete from wms_record_out
		where RECORD_ID = #{id}
	</delete>
</mapper>